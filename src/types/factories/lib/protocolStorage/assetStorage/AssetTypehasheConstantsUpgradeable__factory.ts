/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AssetTypehasheConstantsUpgradeable,
  AssetTypehasheConstantsUpgradeableInterface,
} from "../../../../lib/protocolStorage/assetStorage/AssetTypehasheConstantsUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100155760e1908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c908163c0fb532214606f575063f973a20914603457600080fd5b34606c5780600319360112606c5760206040517f104013c6d43ef337ad1510662b38184eebdef63acce77c2d85827abf2366af268152f35b80fd5b90503460a7578160031936011260a757807f6b9e591266767cd66b5ed28cdfa636ae4d327f033f202f16b223b68f0f2fd27660209252f35b5080fdfea264697066735822122050c931956fd1cc1011f88f6121cfa26ab3f3dcecfc74d1d6977da0637ef5306e64736f6c634300080f0033";

type AssetTypehasheConstantsUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetTypehasheConstantsUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetTypehasheConstantsUpgradeable__factory extends ContractFactory {
  constructor(...args: AssetTypehasheConstantsUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetTypehasheConstantsUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<AssetTypehasheConstantsUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetTypehasheConstantsUpgradeable {
    return super.attach(address) as AssetTypehasheConstantsUpgradeable;
  }
  override connect(
    signer: Signer
  ): AssetTypehasheConstantsUpgradeable__factory {
    return super.connect(signer) as AssetTypehasheConstantsUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetTypehasheConstantsUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as AssetTypehasheConstantsUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetTypehasheConstantsUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetTypehasheConstantsUpgradeable;
  }
}
