/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ActorFactoryStorageUpgradeable,
  ActorFactoryStorageUpgradeableInterface,
} from "../../../lib/actorsFactory/ActorFactoryStorageUpgradeable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "actorInfo",
    outputs: [
      {
        internalType: "address",
        name: "actorContract",
        type: "address",
      },
      {
        internalType: "enum ActorFactoryEnumsUpgradeable.ActorStatus",
        name: "actorStatus",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "actorKey",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061011f806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638ad51d8c14602d575b600080fd5b60676038366004607d565b600160208190526000918252604090912080549101546001600160a01b03821691600160a01b900460ff169083565b60405160749392919060ab565b60405180910390f35b600060208284031215608e57600080fd5b81356001600160a01b038116811460a457600080fd5b9392505050565b6001600160a01b0384168152606081016003841060d857634e487b7160e01b600052602160045260246000fd5b60208201939093526040015291905056fea26469706673582212205072a812deedf70a8e4a9e679512868ddc8908b8532e96f35de59b0b80828e2464736f6c634300080f0033";

type ActorFactoryStorageUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActorFactoryStorageUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActorFactoryStorageUpgradeable__factory extends ContractFactory {
  constructor(...args: ActorFactoryStorageUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ActorFactoryStorageUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<ActorFactoryStorageUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ActorFactoryStorageUpgradeable {
    return super.attach(address) as ActorFactoryStorageUpgradeable;
  }
  override connect(signer: Signer): ActorFactoryStorageUpgradeable__factory {
    return super.connect(signer) as ActorFactoryStorageUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActorFactoryStorageUpgradeableInterface {
    return new utils.Interface(_abi) as ActorFactoryStorageUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ActorFactoryStorageUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ActorFactoryStorageUpgradeable;
  }
}
