/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PaymentsResolverOperationsV1,
  PaymentsResolverOperationsV1Interface,
} from "../../../lib/paymentsResolver/PaymentsResolverOperationsV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTHORIZED_OPERATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_TREASURER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "dutchAuctionFeeResolver",
    outputs: [
      {
        internalType: "uint256",
        name: "makerEarnings",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "englishAuctionFeeResolver",
    outputs: [
      {
        internalType: "uint256",
        name: "makerEarnings",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "protocolSettings",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "sellFeeResolver",
    outputs: [
      {
        internalType: "uint256",
        name: "makerEarnings",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapFeeResolver",
    outputs: [
      {
        internalType: "uint256",
        name: "feeToBePaid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newProtocolAddress",
        type: "address",
      },
    ],
    name: "updateProtocolSettingsAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0806040523461002a5730608052611bb3908161003082396080518181816104c301526118670152f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c80630153432d1461017b57806301ffc9a714610172578063153d7334146101695780631e339f6514610160578063248a9ca3146101575780632f2ff15d1461014e57806336568abe146101455780633659cfe61461013c57806340ce38c8146101335780634f1ef2861461012a5780636a7193e41461012157806391d148541461011857806394658d7e1461010f578063a217fddf14610106578063a8f2293b146100fd578063c4d66de8146100f4578063cd5f325e146100eb5763d547741f146100e357600080fd5b61000e610c0f565b5061000e610bb4565b5061000e610953565b5061000e6108f8565b5061000e6108db565b5061000e61089f565b5061000e61084c565b5061000e610804565b5061000e61078b565b5061000e61066e565b5061000e61049f565b5061000e61040a565b5061000e61033b565b5061000e6102df565b5061000e61024a565b5061000e61020e565b5061000e6101b7565b503461000e57600036600319011261000e5760206040517fdb1507a7bd981676c03bdaae9e28ab8baadf8a4eee150a8b6a2dd2713db13a648152f35b503461000e57602036600319011261000e5760043563ffffffff60e01b811680910361000e57602090637965db0b60e01b81149081156101fd575b506040519015158152f35b6301ffc9a760e01b149050386101f2565b503461000e57600036600319011261000e5760206040517fec67990198cb34a8467e86e518c87d52127fe5b916e0095d8047a8355e37f63e8152f35b503461000e57600036600319011261000e5761026533610cc9565b609754604051632d718fef60e21b81526020918290829060049082906001600160a01b03165afa9081156102d2575b6000916102a5575b50604051908152f35b6102c59150823d81116102cb575b6102bd8183610731565b81019061113a565b3861029c565b503d6102b3565b6102da611149565b610294565b503461000e57602036600319011261000e5760043560005260656020526020600160406000200154604051908152f35b602435906001600160a01b038216820361000e57565b600435906001600160a01b038216820361000e57565b503461000e5760408060031936011261000e576004359061035a61030f565b6000928084526065602052610376600184862001543390610f48565b808452606560209081528385206001600160a01b03841660009081529152604090205460ff16156103a657505051f35b808452606560209081528385206001600160a01b0384166000908152915260409020805460ff19166001179055825133926001600160a01b031691907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d908690a451f35b503461000e57604036600319011261000e5761042461030f565b336001600160a01b0382160361044257610440906004356110aa565b005b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b503461000e57602036600319011261000e576104b9610325565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691906104f23084141561150b565b6105227f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9182541693841461156c565b61052b33610e54565b6040516020810181811067ffffffffffffffff82111761064f575b604052600081526105568361166b565b805115801590610647575b610636575b50610587610583600080516020611b5e8339815191525460ff1690565b1590565b61058d57005b6104409261062b61061f610631936105ba600080516020611b5e833981519152600160ff19825416179055565b604051631b2ce7f360e11b60208201526001600160a01b03851660248201526105fa906105f481604481015b03601f198101835282610731565b876117af565b50600080516020611b5e833981519152805460ff19169055546001600160a01b031690565b6001600160a01b031690565b14611607565b61170d565b61064090836117af565b5038610566565b506000610561565b61065761071a565b610546565b602090600319011261000e5760043590565b503461000e5761067d3661065c565b61068633610cc9565b609754604051634b532dc760e11b81526103e8916106cb9190602090829060049082906001600160a01b03165afa90811561070d575b6000916106ef575b508361116d565b04908181106106e2575b6040519190038152602090f35b6106ea611156565b6106d5565b610707915060203d81116102cb576102bd8183610731565b386106c4565b610715611149565b6106bc565b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761075357604052565b61075b61071a565b604052565b60209067ffffffffffffffff811161077e575b601f01601f19160190565b61078661071a565b610773565b50604036600319011261000e576107a0610325565b6024359067ffffffffffffffff821161000e573660238301121561000e578160040135906107cd82610760565b916107db6040519384610731565b808352366024828601011161000e5760208160009260246104409701838701378401015261185d565b503461000e57602036600319011261000e57610440610821610325565b61082a33610e54565b60018060a01b03166bffffffffffffffffffffffff60a01b6097541617609755565b503461000e57604036600319011261000e57602060ff61089361086d61030f565b6004356000526065845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e57600036600319011261000e5760206040517f0245b6cbab6b03e029f6c88bff9595f9f5c30170f52598c3459ee71476ad59c18152f35b503461000e57600036600319011261000e57602060405160008152f35b503461000e576109073661065c565b61091033610cc9565b60975460405163d891ac9f60e01b81526103e8916106cb9190602090829060049082906001600160a01b03165afa90811561070d576000916106ef57508361116d565b503461000e57602036600319011261000e5761096d610325565b600090815490610a5a60ff91828460081c16938415809581610baa575b6109939061118c565b610b8c575b508454838160081c16908115809281610b82575b6109b59061118c565b610b64575b506109c36113cc565b6109cb6113cc565b610b56575b845492808460081c16938415809581610b4c575b6109ed9061118c565b610b2e575b508554818160081c16908115809281610b24575b610a0f9061118c565b610b06575b50610a1d6113cc565b610af1575b8554818160081c1691610a3f831593849283610ae6575b5061118c565b610ac8575b50610a4d6113cc565b610ab3575b61082a611360565b610a9e575b610a6833611002565b610a7061129a565b610a80610a7b611320565b611413565b610a8957604051f35b610a9961ff001960005416600055565b604051f35b610aae61ff001960005416600055565b610a5f565b610ac361ff001960005416600055565b610a52565b61ff0019166101001786556000805460ff1916600117905538610a44565b905083161538610a39565b610b0161ff001960005416600055565b610a22565b61ff0019166101001787556000805460ff1916600117905538610a14565b5081841615610a06565b61ff0019166101001786556000805460ff19166001179055386109f2565b50818316156109e4565b845461ff00191685556109d0565b61ff0019166101001786556000805460ff19166001179055386109ba565b50818616156109ac565b61ff0019166101001785556000805460ff1916600117905538610998565b508185161561098a565b503461000e57610bc33661065c565b610bcc33610cc9565b609754604051630a4f9bb160e11b81526103e8916106cb9190602090829060049082906001600160a01b03165afa90811561070d576000916106ef57508361116d565b503461000e57604036600319011261000e57610440600435610c2f61030f565b90806000526065602052610c4c6001604060002001543390610f48565b6110aa565b918091926000905b828210610c71575011610c6a575050565b6000910152565b91508060209183015181860152018291610c59565b90610c9960209282815194859201610c51565b0190565b60409160208252610cbd8151809281602086015260208686019101610c51565b601f01601f1916010190565b6001600160a01b03811660009081527faf674092dd2765cd554a2f244a399d55a2ca26739b09284bfb0c8b87da87df8560205260409020547fec67990198cb34a8467e86e518c87d52127fe5b916e0095d8047a8355e37f63e919060ff1615610d30575050565b610d42906001600160a01b0316611a50565b90610d4b6115cd565b906030610d57836119a4565b536078610d63836119ba565b5360415b60018111610e0557610e016037610de9866105e687610d868815611a05565b610de360405195869476020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b6020870152610dc2815180926020858a019101610c51565b8501016011907001034b99036b4b9b9b4b733903937b6329607d1b81520190565b90610c86565b60405162461bcd60e51b815291829160048301610c9d565b0390fd5b9080600f610e4292166010811015610e47575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a610e3884866119cb565b5360041c916119ea565b610d67565b610e4f61198d565b610e18565b6001600160a01b03811660009081527fedeb221ad30506a87ccb533a9d2f162a9dfb17aa4a3909cfc7cfee05fb4297fc60205260409020547f0245b6cbab6b03e029f6c88bff9595f9f5c30170f52598c3459ee71476ad59c1919060ff1615610ebb575050565b610ecd906001600160a01b0316611a50565b90610ed66115cd565b906030610ee2836119a4565b536078610eee836119ba565b5360415b60018111610f1157610e016037610de9866105e687610d868815611a05565b9080600f610f4392166010811015610e47576f181899199a1a9b1b9c1cb0b131b232b360811b901a610e3884866119cb565b610ef2565b9081600052606560205260ff610f748260406000209060018060a01b0316600052602052604060002090565b541615610f7f575050565b610de9610e01926105e6610fa5610f9f60489560018060a01b0316611a50565b92611aee565b60405194859376020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b6020860152610fdf815180926020603789019101610c51565b84017001034b99036b4b9b9b4b733903937b6329607d1b60378201520190610c86565b6001600160a01b03811660009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604081205460ff1615611046575050565b8080526065602090815260408083206001600160a01b038516600090815292529020805460ff1916600117905560405133926001600160a01b031691907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d908290a4565b60008181526065602090815260408083206001600160a01b038616845290915290205460ff166110d8575050565b60008181526065602090815260408083206001600160a01b03861684529091529020805460ff1916905560405133926001600160a01b031691907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a4565b9081602091031261000e575190565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b8060001904821181151516611180570290565b611188611156565b0290565b1561119357565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b90600182811c9216801561121f575b602083101461120957565b634e487b7160e01b600052602260045260246000fd5b91607f16916111fe565b601f8111611235575050565b60009060fd82527f9346ac6dd7de6b96975fec380d4d994c4c12e6a8897544f22915316cc6cca280906020601f850160051c83019410611290575b601f0160051c01915b82811061128557505050565b818155600101611279565b9092508290611270565b6112a560fc546111ef565b601f81116112d5575b507f4e6561744669205061796d656e7473205265736f6c766572000000000000003060fc55565b600060fc8152601f7f371f36870d18f32a11fea0f144b021c8b407bb50f8e0267c711123f454b963c0920160051c8201915b8281106113155750506112ae565b818155600101611307565b604051906040820182811067ffffffffffffffff821117611353575b60405260058252640312e302e360dc1b6020830152565b61135b61071a565b61133c565b60005460ff8160081c169081158092816113c1575b61137e9061118c565b6113af575b5061138c6113cc565b6113946113cc565b61139c6113cc565b6113a257565b61ff001960005416600055565b61ffff19166101011760005538611383565b5060ff821615611375565b60005460ff8160081c16908115809281611408575b6113ea9061118c565b6113f6575b506113a257565b61ffff191661010117600055386113ef565b5060ff8216156113e1565b90815167ffffffffffffffff81116114fe575b61143a8161143560fd546111ef565b611229565b602080601f8311600114611476575081929360009261146b575b50508160011b916000199060031b1c19161760fd55565b015190503880611454565b90601f198316946114a960fd6000527f9346ac6dd7de6b96975fec380d4d994c4c12e6a8897544f22915316cc6cca28090565b926000905b8782106114e65750508360019596106114cd575b505050811b0160fd55565b015160001960f88460031b161c191690553880806114c2565b806001859682949686015181550195019301906114ae565b61150661071a565b611426565b1561151257565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561157357565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b604051906080820182811067ffffffffffffffff8211176115fa575b604052604282526060366020840137565b61160261071a565b6115e9565b1561160e57565b60405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608490fd5b803b156116b2577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b6117168161166b565b60018060a01b03167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b6000604051a2565b604051906060820182811067ffffffffffffffff8211176117a2575b60405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6117aa61071a565b611763565b90813b15611809576000816117ff9360208394519201905af43d15611802573d6117d881610760565b906117e66040519283610731565b81523d6000602083013e5b6117f9611747565b91611955565b90565b60606117f1565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116926118953085141561150b565b6118c57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9283541694851461156c565b6118ce33610e54565b6118d78361166b565b80511580159061194d575b61193c575b50611904610583600080516020611b5e8339815191525460ff1690565b61190d57505050565b61193a9261062b61061f610631936105ba600080516020611b5e833981519152600160ff19825416179055565b565b61194690836117af565b50386118e7565b5060016118e2565b90919015611961575090565b8151156119715750805190602001fd5b60405162461bcd60e51b8152908190610e019060048301610c9d565b50634e487b7160e01b600052603260045260246000fd5b6020908051156119b2570190565b610c9961198d565b6021908051600110156119b2570190565b9060209180518210156119dd57010190565b6119e561198d565b010190565b80156119f8575b6000190190565b611a00611156565b6119f1565b15611a0c57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906060820182811067ffffffffffffffff821117611ae1575b604052602a825260403660208401376030611a86836119a4565b536078611a92836119ba565b536029905b60018211611aaa576117ff915015611a05565b80600f611adb92166010811015610e47576f181899199a1a9b1b9c1cb0b131b232b360811b901a610e3884866119cb565b90611a97565b611ae961071a565b611a6c565b611af66115cd565b906030611b02836119a4565b536078611b0e836119ba565b536041905b60018211611b26576117ff915015611a05565b80600f611b5792166010811015610e47576f181899199a1a9b1b9c1cb0b131b232b360811b901a610e3884866119cb565b90611b1356fe4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143a264697066735822122011c4ab462d9006c10285f2ff8ca0457499c86e06c01526bad341cf929f6ae9f364736f6c634300080f0033";

type PaymentsResolverOperationsV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsResolverOperationsV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentsResolverOperationsV1__factory extends ContractFactory {
  constructor(...args: PaymentsResolverOperationsV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentsResolverOperationsV1> {
    return super.deploy(
      overrides || {}
    ) as Promise<PaymentsResolverOperationsV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentsResolverOperationsV1 {
    return super.attach(address) as PaymentsResolverOperationsV1;
  }
  override connect(signer: Signer): PaymentsResolverOperationsV1__factory {
    return super.connect(signer) as PaymentsResolverOperationsV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsResolverOperationsV1Interface {
    return new utils.Interface(_abi) as PaymentsResolverOperationsV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentsResolverOperationsV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PaymentsResolverOperationsV1;
  }
}
