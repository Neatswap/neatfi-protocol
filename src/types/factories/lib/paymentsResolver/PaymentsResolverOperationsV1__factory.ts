/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PaymentsResolverOperationsV1,
  PaymentsResolverOperationsV1Interface,
} from "../../../lib/paymentsResolver/PaymentsResolverOperationsV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTHORIZED_OPERATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_TREASURER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "dutchAuctionFeeResolver",
    outputs: [
      {
        internalType: "uint256",
        name: "makerEarnings",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "englishAuctionFeeResolver",
    outputs: [
      {
        internalType: "uint256",
        name: "makerEarnings",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "protocolSettings",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "sellFeeResolver",
    outputs: [
      {
        internalType: "uint256",
        name: "makerEarnings",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapFeeResolver",
    outputs: [
      {
        internalType: "uint256",
        name: "feeToBePaid",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newProtocolAddress",
        type: "address",
      },
    ],
    name: "updateProtocolSettingsAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0806040523461002a5730608052611d60908161003082396080518181816104f001526119490152f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c80630153432d1461017b57806301ffc9a714610172578063153d7334146101695780631e339f6514610160578063248a9ca3146101575780632f2ff15d1461014e57806336568abe146101455780633659cfe61461013c57806340ce38c8146101335780634f1ef2861461012a5780636a7193e41461012157806391d148541461011857806394658d7e1461010f578063a217fddf14610106578063a8f2293b146100fd578063c4d66de8146100f4578063cd5f325e146100eb5763d547741f146100e357600080fd5b61000e610c89565b5061000e610c14565b5061000e6109ab565b5061000e610925565b5061000e610908565b5061000e6108cc565b5061000e610879565b5061000e610831565b5061000e6107b8565b5061000e61069b565b5061000e6104cc565b5061000e610437565b5061000e610368565b5061000e61030c565b5061000e61024a565b5061000e61020e565b5061000e6101b7565b503461000e57600036600319011261000e5760206040517fdb1507a7bd981676c03bdaae9e28ab8baadf8a4eee150a8b6a2dd2713db13a648152f35b503461000e57602036600319011261000e5760043563ffffffff60e01b811680910361000e57602090637965db0b60e01b81149081156101fd575b506040519015158152f35b6301ffc9a760e01b149050386101f2565b503461000e57600036600319011261000e5760206040517fec67990198cb34a8467e86e518c87d52127fe5b916e0095d8047a8355e37f63e8152f35b503461000e57600036600319011261000e5761026533610d43565b610274600260975414156111b4565b600260975560c954604051632d718fef60e21b81526102cd91602090829060049082906001600160a01b03165afa9081156102ff575b6000916102d1575b506102bd6001609755565b6040519081529081906020820190565b0390f35b6102f2915060203d81116102f8575b6102ea818361075e565b810190611200565b386102b2565b503d6102e0565b61030761120f565b6102aa565b503461000e57602036600319011261000e5760043560005260656020526020600160406000200154604051908152f35b602435906001600160a01b038216820361000e57565b600435906001600160a01b038216820361000e57565b503461000e5760408060031936011261000e576004359061038761033c565b60009280845260656020526103a3600184862001543390610fc2565b808452606560209081528385206001600160a01b03841660009081529152604090205460ff16156103d357505051f35b808452606560209081528385206001600160a01b0384166000908152915260409020805460ff19166001179055825133926001600160a01b031691907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d908690a451f35b503461000e57604036600319011261000e5761045161033c565b336001600160a01b0382160361046f5761046d90600435611124565b005b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b503461000e57602036600319011261000e576104e6610352565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116919061051f308414156115ed565b61054f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9182541693841461164e565b61055833610ece565b6040516020810181811067ffffffffffffffff82111761067c575b604052600081526105838361174d565b805115801590610674575b610663575b506105b46105b0600080516020611d0b8339815191525460ff1690565b1590565b6105ba57005b61046d9261065861064c61065e936105e7600080516020611d0b833981519152600160ff19825416179055565b604051631b2ce7f360e11b60208201526001600160a01b03851660248201526106279061062181604481015b03601f19810183528261075e565b87611891565b50600080516020611d0b833981519152805460ff19169055546001600160a01b031690565b6001600160a01b031690565b146116e9565b6117ef565b61066d9083611891565b5038610593565b50600061058e565b610684610747565b610573565b602090600319011261000e5760043590565b503461000e576106aa36610689565b6106b333610d43565b60c954604051634b532dc760e11b81526103e8916106f89190602090829060049082906001600160a01b03165afa90811561073a575b60009161071c575b5083611233565b049081811061070f575b6040519190038152602090f35b61071761121c565b610702565b610734915060203d81116102f8576102ea818361075e565b386106f1565b61074261120f565b6106e9565b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761078057604052565b610788610747565b604052565b60209067ffffffffffffffff81116107ab575b601f01601f19160190565b6107b3610747565b6107a0565b50604036600319011261000e576107cd610352565b6024359067ffffffffffffffff821161000e573660238301121561000e578160040135906107fa8261078d565b91610808604051938461075e565b808352366024828601011161000e57602081600092602461046d9701838701378401015261193f565b503461000e57602036600319011261000e5761046d61084e610352565b61085733610ece565b60018060a01b03166bffffffffffffffffffffffff60a01b60c954161760c955565b503461000e57604036600319011261000e57602060ff6108c061089a61033c565b6004356000526065845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e57600036600319011261000e5760206040517f0245b6cbab6b03e029f6c88bff9595f9f5c30170f52598c3459ee71476ad59c18152f35b503461000e57600036600319011261000e57602060405160008152f35b503461000e576102cd6109a161093a36610689565b61094333610d43565b610952600260975414156111b4565b600260975560c95460405163d891ac9f60e01b81526103e89161099a9190602090829060049082906001600160a01b03165afa90811561073a5760009161071c575083611233565b0490611252565b6102bd6001609755565b503461000e57602036600319011261000e576109c5610352565b600090815490610aba60ff91828460081c16938415809581610c0a575b6109eb90611269565b610bec575b508454838160081c16908115809281610be2575b610a0d90611269565b610bc4575b50610a1b6114aa565b610a236114aa565b610bb6575b845492808460081c16938415809581610bac575b610a4590611269565b610b8e575b508554818160081c16908115809281610b84575b610a6790611269565b610b66575b50610a756114aa565b610b51575b8554818160081c1691610a97831593849283610b46575b50611269565b610b28575b50610aa56114aa565b610b13575b610ab261143e565b610857611a6f565b610afe575b610ac83361107c565b610ad0611378565b610ae0610adb6113fe565b6114f1565b610ae957604051f35b610af961ff001960005416600055565b604051f35b610b0e61ff001960005416600055565b610abf565b610b2361ff001960005416600055565b610aaa565b61ff0019166101001786556000805460ff1916600117905538610a9c565b905083161538610a91565b610b6161ff001960005416600055565b610a7a565b61ff0019166101001787556000805460ff1916600117905538610a6c565b5081841615610a5e565b61ff0019166101001786556000805460ff1916600117905538610a4a565b5081831615610a3c565b845461ff0019168555610a28565b61ff0019166101001786556000805460ff1916600117905538610a12565b5081861615610a04565b61ff0019166101001785556000805460ff19166001179055386109f0565b50818516156109e2565b503461000e576102cd6109a1610c2936610689565b610c3233610d43565b610c41600260975414156111b4565b600260975560c954604051630a4f9bb160e11b81526103e89161099a9190602090829060049082906001600160a01b03165afa90811561073a5760009161071c575083611233565b503461000e57604036600319011261000e5761046d600435610ca961033c565b90806000526065602052610cc66001604060002001543390610fc2565b611124565b918091926000905b828210610ceb575011610ce4575050565b6000910152565b91508060209183015181860152018291610cd3565b90610d1360209282815194859201610ccb565b0190565b60409160208252610d378151809281602086015260208686019101610ccb565b601f01601f1916010190565b6001600160a01b03811660009081527faf674092dd2765cd554a2f244a399d55a2ca26739b09284bfb0c8b87da87df8560205260409020547fec67990198cb34a8467e86e518c87d52127fe5b916e0095d8047a8355e37f63e919060ff1615610daa575050565b610dbc906001600160a01b0316611bfd565b90610dc56116af565b906030610dd183611b51565b536078610ddd83611b67565b5360415b60018111610e7f57610e7b6037610e638661061387610e008815611bb2565b610e5d60405195869476020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b6020870152610e3c815180926020858a019101610ccb565b8501016011907001034b99036b4b9b9b4b733903937b6329607d1b81520190565b90610d00565b60405162461bcd60e51b815291829160048301610d17565b0390fd5b9080600f610ebc92166010811015610ec1575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a610eb28486611b78565b5360041c91611b97565b610de1565b610ec9611b3a565b610e92565b6001600160a01b03811660009081527fedeb221ad30506a87ccb533a9d2f162a9dfb17aa4a3909cfc7cfee05fb4297fc60205260409020547f0245b6cbab6b03e029f6c88bff9595f9f5c30170f52598c3459ee71476ad59c1919060ff1615610f35575050565b610f47906001600160a01b0316611bfd565b90610f506116af565b906030610f5c83611b51565b536078610f6883611b67565b5360415b60018111610f8b57610e7b6037610e638661061387610e008815611bb2565b9080600f610fbd92166010811015610ec1576f181899199a1a9b1b9c1cb0b131b232b360811b901a610eb28486611b78565b610f6c565b9081600052606560205260ff610fee8260406000209060018060a01b0316600052602052604060002090565b541615610ff9575050565b610e63610e7b9261061361101f61101960489560018060a01b0316611bfd565b92611c9b565b60405194859376020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b6020860152611059815180926020603789019101610ccb565b84017001034b99036b4b9b9b4b733903937b6329607d1b60378201520190610d00565b6001600160a01b03811660009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604081205460ff16156110c0575050565b8080526065602090815260408083206001600160a01b038516600090815292529020805460ff1916600117905560405133926001600160a01b031691907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d908290a4565b60008181526065602090815260408083206001600160a01b038616845290915290205460ff16611152575050565b60008181526065602090815260408083206001600160a01b03861684529091529020805460ff1916905560405133926001600160a01b031691907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a4565b156111bb57565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9081602091031261000e575190565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b8060001904821181151516611246570290565b61124e61121c565b0290565b81811061125d570390565b61126561121c565b0390565b1561127057565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b90600182811c921680156112fc575b60208310146112e657565b634e487b7160e01b600052602260045260246000fd5b91607f16916112db565b601f8111611312575050565b60009061012f82527f232da9e50dad2971456a78fb5cd6ff6b75019984d6e918139ce990999420f979906020601f850160051c8301941061136e575b601f0160051c01915b82811061136357505050565b818155600101611357565b909250829061134e565b61012e61138581546112cc565b601f81116113b4575b507f4e6561744669205061796d656e7473205265736f6c76657200000000000000309055565b6000828152601f7fbdaadd9f750d0166045bf387a364eadd28ba243e04512a47282aa5147a68e37f920160051c8201915b8281106113f357505061138e565b8181556001016113e5565b604051906040820182811067ffffffffffffffff821117611431575b60405260058252640312e302e360dc1b6020830152565b611439610747565b61141a565b60005460ff8160081c1690811580928161149f575b61145c90611269565b61148d575b5061146a6114aa565b6114726114aa565b61147a6114aa565b61148057565b61ff001960005416600055565b61ffff19166101011760005538611461565b5060ff821615611453565b60005460ff8160081c169081158092816114e6575b6114c890611269565b6114d4575b5061148057565b61ffff191661010117600055386114cd565b5060ff8216156114bf565b90815167ffffffffffffffff81116115e0575b61012f9061151b8161151684546112cc565b611306565b602080601f831160011461155757508192939460009261154c575b50508160011b916000199060031b1c1916179055565b015190503880611536565b90601f1983169561158b61012f6000527f232da9e50dad2971456a78fb5cd6ff6b75019984d6e918139ce990999420f97990565b926000905b8882106115c8575050836001959697106115af575b505050811b019055565b015160001960f88460031b161c191690553880806115a5565b80600185968294968601518155019501930190611590565b6115e8610747565b611504565b156115f457565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561165557565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b604051906080820182811067ffffffffffffffff8211176116dc575b604052604282526060366020840137565b6116e4610747565b6116cb565b156116f057565b60405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608490fd5b803b15611794577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b6117f88161174d565b60018060a01b03167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b6000604051a2565b604051906060820182811067ffffffffffffffff821117611884575b60405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b61188c610747565b611845565b90813b156118eb576000816118e19360208394519201905af43d156118e4573d6118ba8161078d565b906118c8604051928361075e565b81523d6000602083013e5b6118db611829565b91611a37565b90565b60606118d3565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692611977308514156115ed565b6119a77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9283541694851461164e565b6119b033610ece565b6119b98361174d565b805115801590611a2f575b611a1e575b506119e66105b0600080516020611d0b8339815191525460ff1690565b6119ef57505050565b611a1c9261065861064c61065e936105e7600080516020611d0b833981519152600160ff19825416179055565b565b611a289083611891565b50386119c9565b5060016119c4565b90919015611a43575090565b815115611a535750805190602001fd5b60405162461bcd60e51b8152908190610e7b9060048301610d17565b600080549060ff8260081c16918215809381611b2f575b611a8f90611269565b611b11575b50805460ff8160081c16908115809281611b06575b611ab290611269565b611ae8575b506001609755611ad9575b50611ac957565b611a1c61ff001960005416600055565b805461ff001916905538611ac2565b61ff0019166101001782556000805460ff1916600117905538611ab7565b5060ff821615611aa9565b61ff0019166101001781556000805460ff1916600117905538611a94565b5060ff821615611a86565b50634e487b7160e01b600052603260045260246000fd5b602090805115611b5f570190565b610d13611b3a565b602190805160011015611b5f570190565b906020918051821015611b8a57010190565b611b92611b3a565b010190565b8015611ba5575b6000190190565b611bad61121c565b611b9e565b15611bb957565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906060820182811067ffffffffffffffff821117611c8e575b604052602a825260403660208401376030611c3383611b51565b536078611c3f83611b67565b536029905b60018211611c57576118e1915015611bb2565b80600f611c8892166010811015610ec1576f181899199a1a9b1b9c1cb0b131b232b360811b901a610eb28486611b78565b90611c44565b611c96610747565b611c19565b611ca36116af565b906030611caf83611b51565b536078611cbb83611b67565b536041905b60018211611cd3576118e1915015611bb2565b80600f611d0492166010811015610ec1576f181899199a1a9b1b9c1cb0b131b232b360811b901a610eb28486611b78565b90611cc056fe4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143a264697066735822122088db1bdf81a66b1e5eaf03adcc7066ca8a17687e0214e1801f22ec0e2661325464736f6c634300080f0033";

type PaymentsResolverOperationsV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsResolverOperationsV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentsResolverOperationsV1__factory extends ContractFactory {
  constructor(...args: PaymentsResolverOperationsV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentsResolverOperationsV1> {
    return super.deploy(
      overrides || {}
    ) as Promise<PaymentsResolverOperationsV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentsResolverOperationsV1 {
    return super.attach(address) as PaymentsResolverOperationsV1;
  }
  override connect(signer: Signer): PaymentsResolverOperationsV1__factory {
    return super.connect(signer) as PaymentsResolverOperationsV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsResolverOperationsV1Interface {
    return new utils.Interface(_abi) as PaymentsResolverOperationsV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentsResolverOperationsV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PaymentsResolverOperationsV1;
  }
}
