/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProtocolTreasuryStorageUpgradeable,
  ProtocolTreasuryStorageUpgradeableInterface,
} from "../../../lib/protocolTreasury/ProtocolTreasuryStorageUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenHolder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockedTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableToUnlockAt",
            type: "uint256",
          },
          {
            internalType:
              "enum ProtocolTreasuryStorageUpgradeable.LockerStatus",
            name: "lockerStatus",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct ProtocolTreasuryStorageUpgradeable.Locker",
        name: "locker",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lockerHash",
        type: "bytes32",
      },
    ],
    name: "LockerCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenHolder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockedTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableToUnlockAt",
            type: "uint256",
          },
          {
            internalType:
              "enum ProtocolTreasuryStorageUpgradeable.LockerStatus",
            name: "lockerStatus",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct ProtocolTreasuryStorageUpgradeable.Locker",
        name: "locker",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lockerHash",
        type: "bytes32",
      },
    ],
    name: "LockerUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "yield",
        type: "uint256",
      },
    ],
    name: "YieldClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentFeeDistributionPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPoolGenerationTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lockedNeatsByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockerInfo",
    outputs: [
      {
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lockedTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableToUnlockAt",
        type: "uint256",
      },
      {
        internalType: "enum ProtocolTreasuryStorageUpgradeable.LockerStatus",
        name: "lockerStatus",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockersByAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "neatTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolSettingsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLockedNeats",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingEscrowAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100165761031e908161001c8239f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816302ee0efb146102955750806313f405c7146102775780631fe70d8c146101f857806327cfe856146101db57806343ab086d146101b057806348f7aa7a146101615780635505a9b51461013957806382aba4dc1461011b578063da25ace4146100f3578063e27e6975146100bc5763f05690c41461009b57600080fd5b346100b857816003193601126100b8576020906003549051908152f35b5080fd5b50346100b85760203660031901126100b85760209181906001600160a01b036100e36102cd565b1681526007845220549051908152f35b50346100b857816003193601126100b85760025490516001600160a01b039091168152602090f35b50346100b857816003193601126100b8576020906005549051908152f35b50346100b857816003193601126100b85760015490516001600160a01b039091168152602090f35b50346100b857806003193601126100b85761017a6102cd565b6001600160a01b031682526008602052808220805460243591908210156101ac57835260209283902001549051908152f35b8380fd5b50346100b857816003193601126100b8579054905160109190911c6001600160a01b03168152602090f35b50346100b857816003193601126100b85760209051620151808152f35b50346100b85760203660031901126100b857600435825260066020528082209060018060a01b038254169160018101549160028201549060ff60046003850154940154169381519586526020860152840152606083015260038110156102635760a092506080820152f35b634e487b7160e01b83526021600452602483fd5b50346100b857816003193601126100b8576020906004549051908152f35b919050346102c95760203660031901126102c9576020926001600160a01b036102bc6102cd565b1681526009845220548152f35b8280fd5b600435906001600160a01b03821682036102e357565b600080fdfea2646970667358221220279628094e4ddcc9e7b420a3d5ed67e3e4ca441d59fa83d132cd0a8371f2b9b064736f6c634300080f0033";

type ProtocolTreasuryStorageUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolTreasuryStorageUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProtocolTreasuryStorageUpgradeable__factory extends ContractFactory {
  constructor(...args: ProtocolTreasuryStorageUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProtocolTreasuryStorageUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<ProtocolTreasuryStorageUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProtocolTreasuryStorageUpgradeable {
    return super.attach(address) as ProtocolTreasuryStorageUpgradeable;
  }
  override connect(
    signer: Signer
  ): ProtocolTreasuryStorageUpgradeable__factory {
    return super.connect(signer) as ProtocolTreasuryStorageUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolTreasuryStorageUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as ProtocolTreasuryStorageUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProtocolTreasuryStorageUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProtocolTreasuryStorageUpgradeable;
  }
}
