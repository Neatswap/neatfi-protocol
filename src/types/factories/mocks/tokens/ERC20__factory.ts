/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { ERC20, ERC20Interface } from "../../../mocks/tokens/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052346200030f5762000c80803803806200001d8162000314565b92833981016040828203126200030f5781516001600160401b0391908281116200030f57816200004f9185016200033a565b92602091828201518481116200030f576200006b92016200033a565b8351918383116200022157603654926001958685811c9516801562000304575b8386101462000200578190601f95868111620002ad575b508390868311600114620002435760009262000237575b5050600019600383901b1c191690861b176036555b815193841162000221576037548581811c9116801562000216575b828210146200020057838111620001b4575b50809284116001146200014757509282939183926000946200013b575b50501b916000199060031b1c1916176037555b6040516108c29081620003be8239f35b01519250388062000118565b919083601f198116603760005284600020946000905b888383106200019957505050106200017f575b505050811b016037556200012b565b015160001960f88460031b161c1916905538808062000170565b8587015188559096019594850194879350908101906200015d565b6037600052816000208480870160051c820192848810620001f6575b0160051c019086905b828110620001e9575050620000fb565b60008155018690620001d9565b92508192620001d0565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000e9565b634e487b7160e01b600052604160045260246000fd5b015190503880620000b9565b90889350601f198316916036600052856000209260005b878282106200029657505084116200027c575b505050811b01603655620000ce565b015160001960f88460031b161c191690553880806200026d565b8385015186558c979095019493840193016200025a565b9091506036600052836000208680850160051c820192868610620002fa575b918a91869594930160051c01915b828110620002ea575050620000a2565b600081558594508a9101620002da565b92508192620002cc565b94607f16946200008b565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200022157604052565b81601f820112156200030f578051906001600160401b03821162000221576020906200036f601f8401601f1916830162000314565b938385528284830101116200030f5782906000905b83838310620003a4575050116200039a57505090565b6000918301015290565b819350828193920101518282880101520183916200038456fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146104b657508163095ea7b31461048c57816318160ddd1461046d57816323b872dd146103a1578163313ce56714610385578163395093511461031a57816370a08231146102e257816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6105e9565b6100c2610604565b6001600160a01b0391821683526034865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086105e9565b602435903361061a565b5160018152f35b905082346101be57826003193601126101be576101346105e9565b918360243592338152603460205281812060018060a01b038616825260205220549082821061016d57602085610112858503873361078a565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e55780519082603754600181811c908083169283156102d8575b60209384841081146102c5578388529081156102a95750600114610253575b505050829003601f01601f191682019267ffffffffffffffff841183851017610240575082918261023c925282610592565b0390f35b634e487b7160e01b815260418552602490fd5b603787529192508591837f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b838510610295575050505083010185808061020a565b80548886018301529301928490820161027f565b60ff1916878501525050151560051b840101905085808061020a565b634e487b7160e01b895260228a52602489fd5b91607f16916101eb565b5050346100e55760203660031901126100e55760209181906001600160a01b0361030a6105e9565b1681526033845220549051908152f35b8284346101be57816003193601126101be576103346105e9565b338252603460209081528383206001600160a01b0383168452905282822054909160243591908219821161037257602085610112848601873361078a565b634e487b7160e01b815260118652602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e5576103bd6105e9565b6103c5610604565b6001600160a01b03821684526034602090815285852033865290529284902054604435939260018201610401575b60208661011287878761061a565b84821061042a575091839161041f602096956101129503338361078a565b9193948193506103f3565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906035549051908152f35b5050346100e557806003193601126100e5576020906101126104ac6105e9565b602435903361078a565b8490843461058e578260031936011261058e5782603654600181811c90808316928315610584575b60209384841081146102c5578388529081156102a9575060011461052e57505050829003601f01601f191682019267ffffffffffffffff841183851017610240575082918261023c925282610592565b603687529192508591837f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b838510610570575050505083010185808061020a565b80548886018301529301928490820161055a565b91607f16916104de565b8280fd5b919091602080825283519081818401526000945b8286106105d35750508060409394116105c6575b601f01601f1916010190565b60008382840101526105ba565b85810182015184870160400152948101946105a6565b600435906001600160a01b03821682036105ff57565b600080fd5b602435906001600160a01b03821682036105ff57565b6001600160a01b0390811691821561073757169182156106e6576000828152603360205260408120549180831061069257604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561083b57169182156107eb5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220619a23a88a295ee38400e82ed8bfd735b2e35344bf881ac6505fb3e9110c0d1264736f6c634300080f0033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
