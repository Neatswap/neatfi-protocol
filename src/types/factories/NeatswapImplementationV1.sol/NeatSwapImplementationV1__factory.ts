/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NeatSwapImplementationV1,
  NeatSwapImplementationV1Interface,
} from "../../NeatswapImplementationV1.sol/NeatSwapImplementationV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bidHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "orderData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "bidData",
        type: "bytes",
      },
    ],
    name: "approveAndResolveSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "approveLastBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bidValue",
        type: "uint256",
      },
    ],
    name: "bidForDutchAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bidValue",
        type: "uint256",
      },
    ],
    name: "bidForEnglishAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "buyItNow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newFeeDistributionAddress",
        type: "address",
      },
    ],
    name: "changeFeeDistributionAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "claimDutchAuction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "claimEnglishAuction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "decreaseDucthAuctionPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeDistributionAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "feeDistributionAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "increaseEnglishAuctionPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_neatFiProtocolAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum AssetEnumsUpgradeable.TokenType",
            name: "tokenType",
            type: "uint8",
          },
        ],
        internalType: "struct AssetStructsUpgradeable.Token[]",
        name: "tokens",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "actorKey",
        type: "bytes32",
      },
    ],
    name: "makeBid",
    outputs: [
      {
        internalType: "bytes32",
        name: "bidHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum AssetEnumsUpgradeable.TokenType",
            name: "tokenType",
            type: "uint8",
          },
        ],
        internalType: "struct AssetStructsUpgradeable.Token[]",
        name: "tokens",
        type: "tuple[]",
      },
      {
        internalType: "enum AssetEnumsUpgradeable.AssetOrderType",
        name: "orderType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPrice",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "actorKey",
        type: "bytes32",
      },
    ],
    name: "makeOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "neatFiProtocolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestActorKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a080604052346100315730608052612588908161003782396080518181816109d70152818161128601526120620152f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461024357806306fdde031461023a5780630bd2470714610231578063248a9ca3146102285780632cb752d61461021f5780632eaecfb7146102165780632f2ff15d1461020d57806332e6db691461020457806336568abe146101fb5780633659cfe6146101f25780634271addc146101e95780634f1ef286146101e057806358da7ce5146101d75780635ab03ce6146101ce578063660fe90d146101c5578063663c5441146101bc5780637489ec23146101b35780638e92c22f146101aa57806391d14854146101a15780639d888e8614610198578063a217fddf1461018f578063ae71a07e14610186578063c4d66de81461017d578063d547741f14610174578063d56721861461016b578063d6fdcd4014610162578063f043314a146101595763f700260c1461015157600080fd5b61000e611551565b5061000e6114db565b5061000e61142c565b5061000e611401565b5061000e6113bc565b5061000e611233565b5061000e611181565b5061000e611164565b5061000e6110b9565b5061000e611062565b5061000e610fee565b5061000e610f74565b5061000e610f00565b5061000e610dfa565b5061000e610d60565b5061000e610d04565b5061000e610c88565b5061000e610b53565b5061000e6109af565b5061000e610918565b5061000e61088b565b5061000e6107b8565b5061000e610710565b5061000e610600565b5061000e6105d0565b5061000e610484565b5061000e610398565b503461000e57602036600319011261000e5760043563ffffffff60e01b811680910361000e57602090637965db0b60e01b8114908115610289575b506040519015158152f35b6301ffc9a760e01b1490503861027e565b600091031261000e57565b90600182811c921680156102d5575b60208310146102bf57565b634e487b7160e01b600052602260045260246000fd5b91607f16916102b4565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161030957604052565b6103116102df565b604052565b90601f801991011681019081106001600160401b0382111761030957604052565b918091926000905b828210610357575011610350575050565b6000910152565b9150806020918301518186015201829161033f565b6040916020825261038c8151809281602086015260208686019101610337565b601f01601f1916010190565b503461000e5760008060031936011261048157604051908061012e908154906103c0826102a5565b8086529260019280841690811561045457506001146103fa575b6103f6866103ea81880382610316565b6040519182918261036c565b0390f35b815292507fbdaadd9f750d0166045bf387a364eadd28ba243e04512a47282aa5147a68e37f5b82841061043c5750505081016020016103ea826103f6386103da565b80546020858701810191909152909301928101610420565b90508695506103f6969350602092506103ea94915060ff191682840152151560051b8201019293386103da565b80fd5b503461000e576000806003193601126104815780805260c960209081526040808320336000908152925290205460ff16156105275761012d5481906001600160a01b0316803b1561052457819060246040518094819363472009d960e11b83523060048401525af18015610517575b6104fe575b50604051f35b8061050b610511926102f6565b8061029a565b386104f8565b61051f6115c5565b6104f3565b50fd5b6105cc60486105b46105383361230c565b6105a66105436123c1565b6040519485937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000006020860152610583815180926020603789019101610337565b84017001034b99036b4b9b9b4b733903937b6329607d1b60378201520190611bc8565b03601f198101835282610316565b60405162461bcd60e51b81529182916004830161036c565b0390fd5b503461000e57602036600319011261000e5760043560005260c96020526020600160406000200154604051908152f35b503461000e576000604036600319011261048157610623600260fb5414156115d2565b600260fb5561012d546001600160a01b0316803b156106ac57604051630d342e7560e21b815233600480830191909152356024808301919091523560448201529082908290818381606481015b03925af1801561069f575b610690575b5061068b600160fb55565b604051f35b610699906102f6565b38610680565b6106a76115c5565b61067b565b5080fd5b9181601f8401121561000e578235916001600160401b03831161000e576020838186019501011161000e57565b90604060031983011261000e5760043591602435906001600160401b03821161000e5761070c916004016106b0565b9091565b50600261071c366106dd565b60fb549161072f600095869414156115d2565b600260fb5561012d546001600160a01b031690813b156107a3578361076c95604051968795869485936358f52e5b60e11b8552336004860161172a565b03925af18015610796575b610787575b50600160fb55604051f35b610790906102f6565b3861077c565b61079e6115c5565b610777565b8380fd5b6001600160a01b0381160361000e57565b503461000e5760408060031936011261000e57600435906024356107db816107a7565b60009280845260c96020526107f7600184862001543390611c4a565b80845260c960209081528385206001600160a01b03841660009081529152604090205460ff161561082757505051f35b80845260c960209081528385206001600160a01b0384166000908152915260409020805460ff19166001179055825133926001600160a01b031691907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d908690a451f35b503461000e57602036600319011261000e576004356108a9816107a7565b6108b233611bdf565b61012d546001600160a01b039081169190823b1561000e5760446000928360405195869485936308610b9560e11b85523060048601521660248401525af1801561090b575b6108fe575b005b8061050b6108fc926102f6565b6109136115c5565b6108f7565b503461000e57604036600319011261000e57602435610936816107a7565b336001600160a01b03821603610952576108fc90600435611d4f565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b503461000e57602036600319011261000e576004356109cd816107a7565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169190610a06308414156117b4565b610a2460008051602061253383398151915291825416938414611815565b610a2d33611bdf565b604051602081018181106001600160401b03821117610b46575b60405260008152610a5783611e7c565b805115801590610b3e575b610b2d575b50610a88610a846000805160206125138339815191525460ff1690565b1590565b610a8e57005b6108fc92610b22610b16610b2893610abb600080516020612513833981519152600160ff19825416179055565b604051631b2ce7f360e11b60208201526001600160a01b0385166024820152610af190610aeb81604481016105a6565b87611fad565b50600080516020612513833981519152805460ff19169055546001600160a01b031690565b6001600160a01b031690565b14611e18565b611f0c565b610b379083611fad565b5038610a67565b506000610a62565b610b4e6102df565b610a47565b503461000e5760031960803682011261000e576001600160401b039060443582811161000e57610b879036906004016106b0565b91909260643590811161000e57610ba29036906004016106b0565b919093610bb4600260fb5414156115d2565b600260fb5561012d546001600160a01b031691823b1561000e57600094610c248692610c1596604051998a9889978896639d7ff10160e01b88523360048901526004356024890152602435604489015260a0606489015260a4880191611709565b92858403016084860152611709565b03925af18015610c51575b610c3e575b6108fc600160fb55565b8061050b610c4b926102f6565b38610c34565b610c596115c5565b610c2f565b6020906001600160401b038111610c7b575b601f01601f19160190565b610c836102df565b610c70565b50604036600319011261000e57600435610ca1816107a7565b602435906001600160401b03821161000e573660238301121561000e57816004013590610ccd82610c5e565b91610cdb6040519384610316565b808352366024828601011161000e5760208160009260246108fc97018387013784010152612058565b506002610d10366106dd565b60fb5491610d23600095869414156115d2565b600260fb5561012d546001600160a01b031690813b156107a3578361076c9560405196879586948593637ed67ce360e01b8552336004860161172a565b503461000e576000602036600319011261048157610d83600260fb5414156115d2565b600260fb5561012d546001600160a01b0316803b156106ac5760405163281ae15d60e21b815233600480830191909152356024820152908290829081838160448101610670565b9181601f8401121561000e578235916001600160401b03831161000e576020808501948460071b01011161000e57565b503461000e57606036600319011261000e576004356001600160401b03811161000e57610e7a6020610e336103f6933690600401610dca565b610e42600260fb5414156115d2565b600260fb5560018060a01b0361012d5416906000604051809681958294633604e5fb60e21b845260a0600485015260a484019161162d565b3360248301524260448301526024356064830152604435608483015203925af1908115610ef3575b600091610ec5575b50610eb5600160fb55565b6040519081529081906020820190565b610ee6915060203d8111610eec575b610ede8183610316565b81019061161e565b38610eaa565b503d610ed4565b610efb6115c5565b610ea2565b503461000e576000604036600319011261048157610f23600260fb5414156115d2565b600260fb5561012d546001600160a01b0316803b156106ac576040516315ffcda760e11b81523360048083019190915235602480830191909152356044820152908290829081838160648101610670565b503461000e57600060203660031901126104815761012d546001600160a01b0316803b156106ac5760405163212c859f60e21b8152336004808301919091523560248201529082908290604490829084905af18015610fe1575b610fd85750604051f35b610511906102f6565b610fe96115c5565b610fce565b503461000e576000604036600319011261048157611011600260fb5414156115d2565b600260fb5561012d546001600160a01b0316803b156106ac57604051637fff543360e01b81523360048083019190915235602480830191909152356044820152908290829081838160648101610670565b503461000e57604036600319011261000e57602060ff6110ad602435611087816107a7565b60043560005260c9845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e5760008060031936011261048157604051908061012f908154906110e1826102a5565b80865292600192808416908115610454575060011461110a576103f6866103ea81880382610316565b815292507f232da9e50dad2971456a78fb5cd6ff6b75019984d6e918139ce990999420f9795b82841061114c5750505081016020016103ea826103f6386103da565b80546020858701810191909152909301928101611130565b503461000e57600036600319011261000e57602060405160008152f35b5060a036600319011261000e576004356001600160401b03811161000e576111ad903690600401610dca565b9060243590600582101561000e576103f692611214926020926111d5600260fb5414156115d2565b600260fb5560018060a01b0361012d54169160405195869485938493630510629560e51b85526084359260643592604435924292339260048a016116a4565b039134905af1908115610ef357600091610ec55750610eb5600160fb55565b503461000e57602036600319011261000e57600435611251816107a7565b6113366000549160ff8360081c169283158094816113b1575b61127390611751565b61139f575b506112cb6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906112b4308314156117b4565b600080516020612533833981519152541614611815565b60005460ff8160081c16908115809281611394575b6112e990611751565b611382575b506112f7611b81565b6112ff611b81565b61136d575b61130c611b15565b611314612176565b61012d80546001600160a01b0319166001600160a01b03909216919091179055565b61133f33611ca7565b6113476118e8565b6113576113526119db565b611a1a565b61135d57005b6108fc61ff001960005416600055565b61137d61ff001960005416600055565b611304565b61ffff191661010117600055386112ee565b5060ff8216156112e0565b61ffff19166101011760005538611278565b5060ff82161561126a565b503461000e57604036600319011261000e576108fc6024356004356113e0826107a7565b8060005260c96020526113fc6001604060002001543390611c4a565b611d4f565b503461000e57600036600319011261000e5761012d546040516001600160a01b039091168152602090f35b503461000e576000806003193601126104815761012d546040516335364ac960e11b815230600482015290602090829060249082906001600160a01b03165afa9081156114ce575b829161148f575b6040516001600160a01b0383168152602090f35b90506020813d82116114c6575b816114a960209383610316565b810103126106ac576103f69150516114c0816107a7565b3861147b565b3d915061149c565b6114d66115c5565b611474565b5060026114e7366106dd565b60fb54916114fa600095869414156115d2565b600260fb5561012d546001600160a01b031690813b156107a3576115369460405195869485938493634289b6f560e11b8552336004860161172a565b039134905af18015610796576107875750600160fb55604051f35b503461000e576000604036600319011261048157611574600260fb5414156115d2565b600260fb5561012d546001600160a01b0316803b156106ac576040516383caecdf60e01b81523360048083019190915235602480830191909152356044820152908290829081838160648101610670565b506040513d6000823e3d90fd5b156115d957565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9081602091031261000e575190565b918181526020809101929160009182905b82821061164d57505050505090565b9091929394853561165d816107a7565b6001600160a01b031681528582013582820152604080870135908201526060808701359060038210156116a057820152608090810195019392916001019061163e565b8680fd5b9491906116c191999897949996939660e0875260e087019161162d565b9760058610156116f35760c095602086015260018060a01b031660408501526060840152608083015260a08201520152565b634e487b7160e01b600052602160045260246000fd5b908060209392818452848401376000828201840152601f01601f1916010190565b61174e949260609260018060a01b0316825260208201528160408201520191611709565b90565b1561175857565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b156117bb57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561181c57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b601f8111611882575050565b60009061012f82527f232da9e50dad2971456a78fb5cd6ff6b75019984d6e918139ce990999420f979906020601f850160051c830194106118de575b601f0160051c01915b8281106118d357505050565b8181556001016118c7565b90925082906118be565b61012e6118f581546102a5565b601f8111611978575b50604f81556000527f4e65617446692050726f746f636f6c20496d706c656d656e746174696f6e20437fbdaadd9f750d0166045bf387a364eadd28ba243e04512a47282aa5147a68e37f55661bdb9d1c9858dd60ca1b7fbdaadd9f750d0166045bf387a364eadd28ba243e04512a47282aa5147a68e38055565b601f0160051c7fbdaadd9f750d0166045bf387a364eadd28ba243e04512a47282aa5147a68e37f017fbdaadd9f750d0166045bf387a364eadd28ba243e04512a47282aa5147a68e3815b8181106119cf57506118fe565b600081556001016119c2565b60405190604082018281106001600160401b03821117611a0d575b60405260058252640312e302e360dc1b6020830152565b611a156102df565b6119f6565b9081516001600160401b038111611b08575b61012f90611a4381611a3e84546102a5565b611876565b602080601f8311600114611a7f575081929394600092611a74575b50508160011b916000199060031b1c1916179055565b015190503880611a5e565b90601f19831695611ab361012f6000527f232da9e50dad2971456a78fb5cd6ff6b75019984d6e918139ce990999420f97990565b926000905b888210611af057505083600195969710611ad7575b505050811b019055565b015160001960f88460031b161c19169055388080611acd565b80600185968294968601518155019501930190611ab8565b611b106102df565b611a2c565b60005460ff8160081c16908115809281611b76575b611b3390611751565b611b64575b50611b41611b81565b611b49611b81565b611b51611b81565b611b5757565b61ff001960005416600055565b61ffff19166101011760005538611b38565b5060ff821615611b2a565b60005460ff8160081c16908115809281611bbd575b611b9f90611751565b611bab575b50611b5757565b61ffff19166101011760005538611ba4565b5060ff821615611b96565b90611bdb60209282815194859201610337565b0190565b6001600160a01b03811660009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602052604090205460ff1615611c225750565b6105cc906048906105b490611c3f906001600160a01b031661230c565b6105a6610543612432565b908160005260c960205260ff611c768260406000209060018060a01b0316600052602052604060002090565b541615611c81575050565b6105b46105cc926105a6610543611ca160489560018060a01b031661230c565b926124a3565b6001600160a01b03811660009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602052604081205460ff1615611ceb575050565b80805260c9602090815260408083206001600160a01b038516600090815292529020805460ff1916600117905560405133926001600160a01b031691907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d908290a4565b600081815260c9602090815260408083206001600160a01b038616845290915290205460ff16611d7d575050565b600081815260c9602090815260408083206001600160a01b03861684529091529020805460ff1916905560405133926001600160a01b031691907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a4565b60405190608082018281106001600160401b03821117611e0b575b604052604282526060366020840137565b611e136102df565b611dfa565b15611e1f57565b60405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608490fd5b803b15611eb15760008051602061253383398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b611f1581611e7c565b60018060a01b03167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b6000604051a2565b60405190606082018281106001600160401b03821117611fa0575b60405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b611fa86102df565b611f61565b90813b156120045760008161174e9360208394519201905af43d15611ffd573d611fd681610c5e565b90611fe46040519283610316565b81523d6000602083013e5b611ff7611f46565b9161213e565b6060611fef565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692612090308514156117b4565b6120ae60008051602061253383398151915292835416948514611815565b6120b733611bdf565b6120c083611e7c565b805115801590612136575b612125575b506120ed610a846000805160206125138339815191525460ff1690565b6120f657505050565b61212392610b22610b16610b2893610abb600080516020612513833981519152600160ff19825416179055565b565b61212f9083611fad565b50386120d0565b5060016120cb565b9091901561214a575090565b81511561215a5750805190602001fd5b60405162461bcd60e51b81529081906105cc906004830161036c565b600080549060ff8260081c16918215809381612236575b61219690611751565b612218575b50805460ff8160081c1690811580928161220d575b6121b990611751565b6121ef575b50600160fb556121e0575b506121d057565b61212361ff001960005416600055565b805461ff0019169055386121c9565b61ff0019166101001782556000805460ff19166001179055386121be565b5060ff8216156121b0565b61ff0019166101001781556000805460ff191660011790553861219b565b5060ff82161561218d565b50634e487b7160e01b600052603260045260246000fd5b602090805115612266570190565b611bdb612241565b602190805160011015612266570190565b90602091805182101561229157010190565b612299612241565b010190565b80156122ab576000190190565b634e487b7160e01b600052601160045260246000fd5b156122c857565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b60405190606082018281106001600160401b038211176123b4575b604052602a82526040366020840137603061234183612258565b53607861234d8361226e565b536029905b600182116123655761174e9150156122c1565b80600f6123a1921660108110156123a7575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a612397848661227f565b5360041c9161229e565b90612352565b6123af612241565b612377565b6123bc6102df565b612327565b60006123cb611ddf565b9060306123d783612258565b5360786123e38361226e565b536041905b600182116123fb5761174e9150156122c1565b80600f61242c921660108110156123a7576f181899199a1a9b1b9c1cb0b131b232b360811b901a612397848661227f565b906123e8565b600061243c611ddf565b90603061244883612258565b5360786124548361226e565b536041905b6001821161246c5761174e9150156122c1565b80600f61249d921660108110156123a7576f181899199a1a9b1b9c1cb0b131b232b360811b901a612397848661227f565b90612459565b6124ab611ddf565b9060306124b783612258565b5360786124c38361226e565b536041905b600182116124db5761174e9150156122c1565b80600f61250c921660108110156123a7576f181899199a1a9b1b9c1cb0b131b232b360811b901a612397848661227f565b906124c856fe4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220bd77a6e7d86751a2d1b726c9955f573d2e0ffce7648c506ff099a809c473762d64736f6c634300080f0033";

type NeatSwapImplementationV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NeatSwapImplementationV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NeatSwapImplementationV1__factory extends ContractFactory {
  constructor(...args: NeatSwapImplementationV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NeatSwapImplementationV1> {
    return super.deploy(overrides || {}) as Promise<NeatSwapImplementationV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NeatSwapImplementationV1 {
    return super.attach(address) as NeatSwapImplementationV1;
  }
  override connect(signer: Signer): NeatSwapImplementationV1__factory {
    return super.connect(signer) as NeatSwapImplementationV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NeatSwapImplementationV1Interface {
    return new utils.Interface(_abi) as NeatSwapImplementationV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NeatSwapImplementationV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NeatSwapImplementationV1;
  }
}
